class Solution {
    public int amount(int[] nums, int idx, int[] dp){
        if(idx>=nums.length) return 0;

        if(dp[idx]!=-1){
            return dp[idx];
        }

        int take = nums[idx] + amount(nums, idx+2, dp);
        int notTake = amount(nums, idx+1, dp);

        return dp[idx] = Math.max(take, notTake);
    }
    public int rob(int[] nums) {
        int n = nums.length;
        if(n==1) return nums[0];
        int[] dp = new int[n];
        int[] a = Arrays.copyOfRange(nums, 1, n);
        int[] b = Arrays.copyOfRange(nums, 0, n-1);

        Arrays.fill(dp, -1);
        int first = amount(a, 0, dp);

        Arrays.fill(dp, -1);
        int second = amount(b, 0, dp);

        return Math.max(first, second);
    }
}
