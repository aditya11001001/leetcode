class Solution {
    public int findMax(int[][] mat, int col){
        int n = mat.length;
        if(n==1) return 0;
        int max = mat[0][col];
        int idx = 0;

        for(int i=1; i<mat.length; i++){
            if(max<mat[i][col]){
                idx = i;
                max = mat[i][col];
            }
        }
        return idx;
    }
    public int[] findPeakGrid(int[][] mat) {
        int low = 0;
        int high = mat[0].length-1;
        int m = mat.length;
        int n = mat[0].length;

        while(low<=high){
            int mid = (low + high)/2;
            int row = findMax(mat, mid);

            int left = mid-1>=0 ? mat[row][mid-1] : -1;
            int right = mid+1<n ? mat[row][mid+1] : -1;

            if(mat[row][mid]>left && mat[row][mid]>right){
                return new int[] {row, mid};
            }else if(mat[row][mid]<left){
                high = mid-1;
            }else{
                low = mid+1;
            }
        }

        return new int[] {-1, -1};
    }
}
