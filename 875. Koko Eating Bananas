class Solution {
    public int minEatingSpeed(int[] arr, int k) {
        int n = arr.length;
        long max = arr[0];
        long result = -1;
        for(int i=0; i<n; i++){
            if(max<arr[i]) max = arr[i];
        }
        long low = 1;
        long high = max;
        while(low<=high){
            long mid=low+(high-low)/2;
            long sum = 0;
            for(int i=0; i<n; i++){
                if(arr[i]%mid!=0){
                    long val = (arr[i]/mid) + 1;
                    sum += val;
                }else{
                    long val = arr[i]/mid;
                    sum +=val;
                }
            }
            if(sum<=k){
                result = mid;
                high = mid-1;
            }else{
                low = mid+1;
            }
        }
        return (int)result;
    }
}
