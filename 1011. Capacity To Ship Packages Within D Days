class Solution {
    public int possibleDays(int[] weights, int minLoad){
        int load = 0;
        int day = 1;
        for(int i=0; i<weights.length; i++){
            if(load + weights[i] > minLoad){
                day++;
                load = weights[i];
            }else{
                load += weights[i];
            }
        }
        return day;
    }
    public int shipWithinDays(int[] weights, int days) {
        int high = 0;
        int n = weights.length;
        int low = weights[0];
        int ans = -1;
        
        for(int i=0; i<n; i++){
            high += weights[i];
            if(low<weights[i]) low = weights[i];
        }
        
        while(low<=high){
            int mid = (low+high)/2;
            int noOfDays = possibleDays(weights, mid);
            if(noOfDays<=days){
                high = mid-1;
                ans = mid;
            }else{
                low = mid+1;
            }
        }
        return ans;
    }
}
